pipeline {
    agent {
        docker {
            image 'maven:3.8.5-openjdk-17'
        }
    }
    stages {
        stage('Cleanup workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout Code') {
            steps {
                echo 'Checking out code from the master branch...'
                git branch: 'master', url: 'https://github.com/anuja2015/CICDwithArgo.git'
            }
        }
        stage('Build') {
            steps {
                echo 'Building the Spring Boot application...'
                dir('sourcecode') {
                sh 'mvn clean package'
                }
            }
        
        }
        stage('Build Docker Image') {
            agent{
                docker {
                    image 'openjdk:17'
                }
            }
            steps {
                echo 'Building the Docker image...'
                dir('sourcecode') {
                    script {
                        // Create the Docker image from the generated JAR file
                        def image = docker.build("my-spring-boot-app:${env.BUILD_ID}")
                    }
                }
            }
        }
        stage('Push Docker Image') {
            when {
                branch 'master' // Only push from the 'master' branch
            }
            steps {
                echo 'Pushing the Docker image to Docker Hub...'
                script {
                     // Define your Docker Hub repository (replace with your actual repo name)
                    def repository = 'armdevu/my-spring-boot-app'

                    // Tag the image
                    docker.image("my-spring-boot-app:${env.BUILD_ID}").tag("${repository}:${env.BUILD_ID}")

                    // Push the image to Docker Hub
                    docker.image("${repository}:${env.BUILD_ID}").push()
                }
            }
        }
    }
    post {
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed. Check the logs for details.'
        }
    }
}
